quarkus.datasource.db-kind=mysql

quarkus.datasource.username=root
quarkus.datasource.password=

# Database generation configuration
quarkus.hibernate-orm.database.generation=update
%dev.quarkus.hibernate-orm.database.generation=update
%test.quarkus.hibernate-orm.database.generation=drop-and-create

# Reactive config
quarkus.datasource.reactive.url=mysql://localhost:3306/inventory
%dev.quarkus.datasource.reactive.url=mysql://localhost:3306/inventory_dev
%test.quarkus.datasource.reactive.url=mysql://localhost:3306/inventory_test

# JDBC configuration
quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/inventory
%dev.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/inventory_dev
%test.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/inventory_test

application.port=8080
%dev.application.port=8081
quarkus.http.port=${application.port}
quarkus.http.test-port=${application.port}

quarkus.http.cors=true

quarkus.http.root-path=/inventory-api
quarkus.http.host=0.0.0.0
%dev.quarkus.http.cors.origins=/.*/

quarkus.smallrye-openapi.path=/swagger
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=${quarkus.http.root-path}/q/swagger-ui/
quarkus.swagger-ui.theme=original
quarkus.swagger-ui.doc-expansion=none
quarkus.swagger-ui.operations-sorter=function (a, b) { var order = { "get": "0", "post": "1", "put": "2", "delete": "3" }; return order[a.get("method")].localeCompare(order[b.get("method")]); }
